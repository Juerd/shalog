Goal: a system for tracking physical objects

With a simple barcode driven user interface, the user can specify that a Thing
is either in a Container, at a Place, or in the hands of a Person.

Object hierachy:

    - Command
    - Thing
        has Location
    - Location
        can be "hidden", which also hides its Things from lists
    - Container
        does Thing
        does Place
    - Person
        is-a Place

These all share a single namespace, and are stored as simple JSON-compatible
objects. Metadata is mostly stored as text strings; no need for fancy things.

Input is given as a list of scanned barcodes. The list ends with a command,
which then operates on the given list. A command can require further operands,
given after the command.

Command "is-at", "@":

    The second operand of is-at has to be a Place. This command is implied when
    scanning a Person after scanning one or more Things.

    hammer
    is-at
    infodesk
    -> result: hammer's new location is recorded

    # Note: indentation provided for legability; not required in input!
    spanner
    hammer
    is-at
    infodesk
    -> result: both hammer and spanner are now at infodesk

    box42
    is-at
    shelfB3
    -> result: box42's location is updated to shelfB3

    hammer
    spanner
    -> result: incomplete input, no command given

Command "info":

    box42
    info
    -> result: info about box42's contents (as a thing, and as a location)

    hammer
    info
    -> result: information about the hammer's whereabouts and its recent history

    hammer
    screwdriver
    info
    -> result: error, info does not work on a list of objects

Command "help":

    hammer
    help
    -> result: error, help does not take arguments

    help
    -> result: short help text

Command "cancel" or "abort":

    hammer
    cancel
    -> result: empty stack

    hammer
    box42
    abort
    -> result: empty stack

